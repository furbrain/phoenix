MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 1


   1              		.file "/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c"
   2              		.section	.text,code
   3              		.file "/home/phil/Projects/phoenix/firmware/bootloader/usb_config.h"
   4              		.file "/home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb.h"
   5              		.file "/opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h"
   6              		.def	_int8_t
   7              		.scl	13
   8              		.type	02
   9              		.endef
  10              		.def	_int16_t
  11              		.scl	13
  12              		.type	04
  13              		.endef
  14              		.def	_int32_t
  15              		.scl	13
  16              		.type	05
  17              		.endef
  18              		.def	_int64_t
  19              		.scl	13
  20              		.type	05
  21              		.endef
  22              		.def	_uint8_t
  23              		.scl	13
  24              		.type	014
  25              		.endef
  26              		.def	_uint16_t
  27              		.scl	13
  28              		.type	016
  29              		.endef
  30              		.def	_uint32_t
  31              		.scl	13
  32              		.type	017
  33              		.endef
  34              		.def	_uint64_t
  35              		.scl	13
  36              		.type	017
  37              		.endef
  38              		.def	_int_least8_t
  39              		.scl	13
  40              		.type	02
  41              		.endef
  42              		.def	_int_least16_t
  43              		.scl	13
  44              		.type	04
  45              		.endef
  46              		.def	_int_least24_t
  47              		.scl	13
  48              		.type	05
  49              		.endef
  50              		.def	_int_least32_t
  51              		.scl	13
  52              		.type	05
  53              		.endef
  54              		.def	_int_least64_t
  55              		.scl	13
  56              		.type	05
  57              		.endef
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 2


  58              		.def	_uint_least8_t
  59              		.scl	13
  60              		.type	014
  61              		.endef
  62              		.def	_uint_least16_t
  63              		.scl	13
  64              		.type	016
  65              		.endef
  66              		.def	_uint_least24_t
  67              		.scl	13
  68              		.type	05
  69              		.endef
  70              		.def	_uint_least32_t
  71              		.scl	13
  72              		.type	017
  73              		.endef
  74              		.def	_uint_least64_t
  75              		.scl	13
  76              		.type	017
  77              		.endef
  78              		.def	_int_fast8_t
  79              		.scl	13
  80              		.type	04
  81              		.endef
  82              		.def	_int_fast16_t
  83              		.scl	13
  84              		.type	04
  85              		.endef
  86              		.def	_int_fast24_t
  87              		.scl	13
  88              		.type	05
  89              		.endef
  90              		.def	_int_fast32_t
  91              		.scl	13
  92              		.type	05
  93              		.endef
  94              		.def	_int_fast64_t
  95              		.scl	13
  96              		.type	05
  97              		.endef
  98              		.def	_uint_fast8_t
  99              		.scl	13
 100              		.type	016
 101              		.endef
 102              		.def	_uint_fast16_t
 103              		.scl	13
 104              		.type	016
 105              		.endef
 106              		.def	_uint_fast24_t
 107              		.scl	13
 108              		.type	017
 109              		.endef
 110              		.def	_uint_fast32_t
 111              		.scl	13
 112              		.type	017
 113              		.endef
 114              		.def	_uint_fast64_t
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 3


 115              		.scl	13
 116              		.type	017
 117              		.endef
 118              		.def	_intmax_t
 119              		.scl	13
 120              		.type	05
 121              		.endef
 122              		.def	_uintmax_t
 123              		.scl	13
 124              		.type	017
 125              		.endef
 126              		.file "/opt/microchip/xc16/v1.23/bin/bin/../../include/stdbool.h"
 127              		.file "/opt/microchip/xc16/v1.23/bin/bin/../../include/stdlib.h"
 128              		.file "/opt/microchip/xc16/v1.23/bin/bin/../../include/stddef.h"
 129              		.def	_ptrdiff_t
 130              		.scl	13
 131              		.type	04
 132              		.endef
 133              		.def	_size_t
 134              		.scl	13
 135              		.type	016
 136              		.endef
 137              		.def	_wchar_t
 138              		.scl	13
 139              		.type	015
 140              		.endef
 141              		.def	_.0fake
 142              		.scl	10
 143              		.type	010
 144              		.size	4
 145              		.endef
 146              		.def	_quot
 147              		.val	0
 148              		.scl	8
 149              		.type	04
 150              		.endef
 151              		.def	_rem
 152              		.val	2
 153              		.scl	8
 154              		.type	04
 155              		.endef
 156              		.def	.eos
 157              		.val	4
 158              		.scl	102
 159              		.tag	_.0fake
 160              		.size	4
 161              		.endef
 162              		.def	_div_t
 163              		.scl	13
 164              		.tag	_.0fake
 165              		.size	4
 166              		.type	010
 167              		.endef
 168              		.def	_.1fake
 169              		.scl	10
 170              		.type	010
 171              		.size	4
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 4


 172              		.endef
 173              		.def	_quot
 174              		.val	0
 175              		.scl	8
 176              		.type	016
 177              		.endef
 178              		.def	_rem
 179              		.val	2
 180              		.scl	8
 181              		.type	016
 182              		.endef
 183              		.def	.eos
 184              		.val	4
 185              		.scl	102
 186              		.tag	_.1fake
 187              		.size	4
 188              		.endef
 189              		.def	_udiv_t
 190              		.scl	13
 191              		.tag	_.1fake
 192              		.size	4
 193              		.type	010
 194              		.endef
 195              		.def	_.2fake
 196              		.scl	10
 197              		.type	010
 198              		.size	8
 199              		.endef
 200              		.def	_quot
 201              		.val	0
 202              		.scl	8
 203              		.type	05
 204              		.endef
 205              		.def	_rem
 206              		.val	4
 207              		.scl	8
 208              		.type	05
 209              		.endef
 210              		.def	.eos
 211              		.val	8
 212              		.scl	102
 213              		.tag	_.2fake
 214              		.size	8
 215              		.endef
 216              		.def	_ldiv_t
 217              		.scl	13
 218              		.tag	_.2fake
 219              		.size	8
 220              		.type	010
 221              		.endef
 222              		.def	_.3fake
 223              		.scl	10
 224              		.type	010
 225              		.size	8
 226              		.endef
 227              		.def	_quot
 228              		.val	0
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 5


 229              		.scl	8
 230              		.type	017
 231              		.endef
 232              		.def	_rem
 233              		.val	4
 234              		.scl	8
 235              		.type	017
 236              		.endef
 237              		.def	.eos
 238              		.val	8
 239              		.scl	102
 240              		.tag	_.3fake
 241              		.size	8
 242              		.endef
 243              		.def	_uldiv_t
 244              		.scl	13
 245              		.tag	_.3fake
 246              		.size	8
 247              		.type	010
 248              		.endef
 249              		.file "/home/phil/Projects/phoenix/firmware/bootloader/usb_config.h"
 250              		.def	_usb_ep0_data_stage_callback
 251              		.scl	13
 252              		.type	0221
 253              		.endef
 254              		.file "/home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb_ch9.h"
 255              		.file "/opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h"
 256              		.def	_PID
 257              		.scl	15
 258              		.type	012
 259              		.size	2
 260              		.endef
 261              		.def	_PID_OUT
 262              		.val	1
 263              		.scl	16
 264              		.type	013
 265              		.endef
 266              		.def	_PID_IN
 267              		.val	9
 268              		.scl	16
 269              		.type	013
 270              		.endef
 271              		.def	_PID_SOF
 272              		.val	5
 273              		.scl	16
 274              		.type	013
 275              		.endef
 276              		.def	_PID_SETUP
 277              		.val	13
 278              		.scl	16
 279              		.type	013
 280              		.endef
 281              		.def	_PID_DATA0
 282              		.val	3
 283              		.scl	16
 284              		.type	013
 285              		.endef
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 6


 286              		.def	_PID_DATA1
 287              		.val	11
 288              		.scl	16
 289              		.type	013
 290              		.endef
 291              		.def	_PID_DATA2
 292              		.val	7
 293              		.scl	16
 294              		.type	013
 295              		.endef
 296              		.def	_PID_MDATA
 297              		.val	15
 298              		.scl	16
 299              		.type	013
 300              		.endef
 301              		.def	_PID_ACK
 302              		.val	2
 303              		.scl	16
 304              		.type	013
 305              		.endef
 306              		.def	_PID_NAK
 307              		.val	10
 308              		.scl	16
 309              		.type	013
 310              		.endef
 311              		.def	_PID_STALL
 312              		.val	14
 313              		.scl	16
 314              		.type	013
 315              		.endef
 316              		.def	_PID_NYET
 317              		.val	6
 318              		.scl	16
 319              		.type	013
 320              		.endef
 321              		.def	_PID_PRE
 322              		.val	12
 323              		.scl	16
 324              		.type	013
 325              		.endef
 326              		.def	_PID_ERR
 327              		.val	12
 328              		.scl	16
 329              		.type	013
 330              		.endef
 331              		.def	_PID_SPLIT
 332              		.val	8
 333              		.scl	16
 334              		.type	013
 335              		.endef
 336              		.def	_PID_PING
 337              		.val	4
 338              		.scl	16
 339              		.type	013
 340              		.endef
 341              		.def	_PID_RESERVED
 342              		.val	0
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 7


 343              		.scl	16
 344              		.type	013
 345              		.endef
 346              		.def	.eos
 347              		.val	2
 348              		.scl	102
 349              		.tag	_PID
 350              		.size	2
 351              		.endef
 352              		.def	_DestinationType
 353              		.scl	15
 354              		.type	012
 355              		.size	2
 356              		.endef
 357              		.def	_DEST_DEVICE
 358              		.val	0
 359              		.scl	16
 360              		.type	013
 361              		.endef
 362              		.def	_DEST_INTERFACE
 363              		.val	1
 364              		.scl	16
 365              		.type	013
 366              		.endef
 367              		.def	_DEST_ENDPOINT
 368              		.val	2
 369              		.scl	16
 370              		.type	013
 371              		.endef
 372              		.def	_DEST_OTHER_ELEMENT
 373              		.val	3
 374              		.scl	16
 375              		.type	013
 376              		.endef
 377              		.def	.eos
 378              		.val	2
 379              		.scl	102
 380              		.tag	_DestinationType
 381              		.size	2
 382              		.endef
 383              		.def	_RequestType
 384              		.scl	15
 385              		.type	012
 386              		.size	2
 387              		.endef
 388              		.def	_REQUEST_TYPE_STANDARD
 389              		.val	0
 390              		.scl	16
 391              		.type	013
 392              		.endef
 393              		.def	_REQUEST_TYPE_CLASS
 394              		.val	1
 395              		.scl	16
 396              		.type	013
 397              		.endef
 398              		.def	_REQUEST_TYPE_VENDOR
 399              		.val	2
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 8


 400              		.scl	16
 401              		.type	013
 402              		.endef
 403              		.def	_REQUEST_TYPE_RESERVED
 404              		.val	3
 405              		.scl	16
 406              		.type	013
 407              		.endef
 408              		.def	.eos
 409              		.val	2
 410              		.scl	102
 411              		.tag	_RequestType
 412              		.size	2
 413              		.endef
 414              		.def	_StandardControlRequest
 415              		.scl	15
 416              		.type	012
 417              		.size	2
 418              		.endef
 419              		.def	_GET_STATUS
 420              		.val	0
 421              		.scl	16
 422              		.type	013
 423              		.endef
 424              		.def	_CLEAR_FEATURE
 425              		.val	1
 426              		.scl	16
 427              		.type	013
 428              		.endef
 429              		.def	_SET_FEATURE
 430              		.val	3
 431              		.scl	16
 432              		.type	013
 433              		.endef
 434              		.def	_SET_ADDRESS
 435              		.val	5
 436              		.scl	16
 437              		.type	013
 438              		.endef
 439              		.def	_GET_DESCRIPTOR
 440              		.val	6
 441              		.scl	16
 442              		.type	013
 443              		.endef
 444              		.def	_SET_DESCRIPTOR
 445              		.val	7
 446              		.scl	16
 447              		.type	013
 448              		.endef
 449              		.def	_GET_CONFIGURATION
 450              		.val	8
 451              		.scl	16
 452              		.type	013
 453              		.endef
 454              		.def	_SET_CONFIGURATION
 455              		.val	9
 456              		.scl	16
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 9


 457              		.type	013
 458              		.endef
 459              		.def	_GET_INTERFACE
 460              		.val	10
 461              		.scl	16
 462              		.type	013
 463              		.endef
 464              		.def	_SET_INTERFACE
 465              		.val	11
 466              		.scl	16
 467              		.type	013
 468              		.endef
 469              		.def	_SYNCH_FRAME
 470              		.val	12
 471              		.scl	16
 472              		.type	013
 473              		.endef
 474              		.def	.eos
 475              		.val	2
 476              		.scl	102
 477              		.tag	_StandardControlRequest
 478              		.size	2
 479              		.endef
 480              		.def	_DescriptorTypes
 481              		.scl	15
 482              		.type	012
 483              		.size	2
 484              		.endef
 485              		.def	_DESC_DEVICE
 486              		.val	1
 487              		.scl	16
 488              		.type	013
 489              		.endef
 490              		.def	_DESC_CONFIGURATION
 491              		.val	2
 492              		.scl	16
 493              		.type	013
 494              		.endef
 495              		.def	_DESC_STRING
 496              		.val	3
 497              		.scl	16
 498              		.type	013
 499              		.endef
 500              		.def	_DESC_INTERFACE
 501              		.val	4
 502              		.scl	16
 503              		.type	013
 504              		.endef
 505              		.def	_DESC_ENDPOINT
 506              		.val	5
 507              		.scl	16
 508              		.type	013
 509              		.endef
 510              		.def	_DESC_DEVICE_QUALIFIER
 511              		.val	6
 512              		.scl	16
 513              		.type	013
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 10


 514              		.endef
 515              		.def	_DESC_OTHER_SPEED_CONFIGURATION
 516              		.val	7
 517              		.scl	16
 518              		.type	013
 519              		.endef
 520              		.def	_DESC_INTERFACE_POWER
 521              		.val	8
 522              		.scl	16
 523              		.type	013
 524              		.endef
 525              		.def	_DESC_OTG
 526              		.val	9
 527              		.scl	16
 528              		.type	013
 529              		.endef
 530              		.def	_DESC_DEBUG
 531              		.val	10
 532              		.scl	16
 533              		.type	013
 534              		.endef
 535              		.def	_DESC_INTERFACE_ASSOCIATION
 536              		.val	11
 537              		.scl	16
 538              		.type	013
 539              		.endef
 540              		.def	.eos
 541              		.val	2
 542              		.scl	102
 543              		.tag	_DescriptorTypes
 544              		.size	2
 545              		.endef
 546              		.def	_DeviceClassCodes
 547              		.scl	15
 548              		.type	012
 549              		.size	2
 550              		.endef
 551              		.def	_DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL
 552              		.val	0
 553              		.scl	16
 554              		.type	013
 555              		.endef
 556              		.def	_DEVICE_CLASS_MISC
 557              		.val	239
 558              		.scl	16
 559              		.type	013
 560              		.endef
 561              		.def	_DEVICE_CLASS_APPLICATION_SPECIFIC
 562              		.val	254
 563              		.scl	16
 564              		.type	013
 565              		.endef
 566              		.def	_DEVICE_CLASS_VENDOR_SPECIFIC
 567              		.val	255
 568              		.scl	16
 569              		.type	013
 570              		.endef
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 11


 571              		.def	.eos
 572              		.val	2
 573              		.scl	102
 574              		.tag	_DeviceClassCodes
 575              		.size	2
 576              		.endef
 577              		.def	_EndpointAttributes
 578              		.scl	15
 579              		.type	012
 580              		.size	2
 581              		.endef
 582              		.def	_EP_CONTROL
 583              		.val	0
 584              		.scl	16
 585              		.type	013
 586              		.endef
 587              		.def	_EP_ISOCHRONOUS
 588              		.val	1
 589              		.scl	16
 590              		.type	013
 591              		.endef
 592              		.def	_EP_BULK
 593              		.val	2
 594              		.scl	16
 595              		.type	013
 596              		.endef
 597              		.def	_EP_INTERRUPT
 598              		.val	3
 599              		.scl	16
 600              		.type	013
 601              		.endef
 602              		.def	.eos
 603              		.val	2
 604              		.scl	102
 605              		.tag	_EndpointAttributes
 606              		.size	2
 607              		.endef
 608              		.def	_.4fake
 609              		.scl	10
 610              		.type	010
 611              		.size	1
 612              		.endef
 613              		.def	_destination
 614              		.val	0
 615              		.scl	18
 616              		.type	014
 617              		.size	5
 618              		.endef
 619              		.def	_type
 620              		.val	5
 621              		.scl	18
 622              		.type	014
 623              		.size	2
 624              		.endef
 625              		.def	_direction
 626              		.val	7
 627              		.scl	18
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 12


 628              		.type	014
 629              		.size	1
 630              		.endef
 631              		.def	.eos
 632              		.val	1
 633              		.scl	102
 634              		.tag	_.4fake
 635              		.size	1
 636              		.endef
 637              		.def	_.5fake
 638              		.scl	12
 639              		.type	011
 640              		.size	1
 641              		.endef
 642              		.def	_.4fake
 643              		.val	0
 644              		.scl	11
 645              		.tag	_.4fake
 646              		.size	1
 647              		.type	010
 648              		.endef
 649              		.def	_bmRequestType
 650              		.val	0
 651              		.scl	11
 652              		.type	014
 653              		.endef
 654              		.def	.eos
 655              		.val	1
 656              		.scl	102
 657              		.tag	_.5fake
 658              		.size	1
 659              		.endef
 660              		.def	_setup_packet
 661              		.scl	10
 662              		.type	010
 663              		.size	8
 664              		.endef
 665              		.def	_REQUEST
 666              		.val	0
 667              		.scl	8
 668              		.tag	_.5fake
 669              		.size	1
 670              		.type	011
 671              		.endef
 672              		.def	_bRequest
 673              		.val	1
 674              		.scl	8
 675              		.type	014
 676              		.endef
 677              		.def	_wValue
 678              		.val	2
 679              		.scl	8
 680              		.type	016
 681              		.endef
 682              		.def	_wIndex
 683              		.val	4
 684              		.scl	8
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 13


 685              		.type	016
 686              		.endef
 687              		.def	_wLength
 688              		.val	6
 689              		.scl	8
 690              		.type	016
 691              		.endef
 692              		.def	.eos
 693              		.val	8
 694              		.scl	102
 695              		.tag	_setup_packet
 696              		.size	8
 697              		.endef
 698              		.def	_device_descriptor
 699              		.scl	10
 700              		.type	010
 701              		.size	18
 702              		.endef
 703              		.def	_bLength
 704              		.val	0
 705              		.scl	8
 706              		.type	014
 707              		.endef
 708              		.def	_bDescriptorType
 709              		.val	1
 710              		.scl	8
 711              		.type	014
 712              		.endef
 713              		.def	_bcdUSB
 714              		.val	2
 715              		.scl	8
 716              		.type	016
 717              		.endef
 718              		.def	_bDeviceClass
 719              		.val	4
 720              		.scl	8
 721              		.type	014
 722              		.endef
 723              		.def	_bDeviceSubclass
 724              		.val	5
 725              		.scl	8
 726              		.type	014
 727              		.endef
 728              		.def	_bDeviceProtocol
 729              		.val	6
 730              		.scl	8
 731              		.type	014
 732              		.endef
 733              		.def	_bMaxPacketSize0
 734              		.val	7
 735              		.scl	8
 736              		.type	014
 737              		.endef
 738              		.def	_idVendor
 739              		.val	8
 740              		.scl	8
 741              		.type	016
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 14


 742              		.endef
 743              		.def	_idProduct
 744              		.val	10
 745              		.scl	8
 746              		.type	016
 747              		.endef
 748              		.def	_bcdDevice
 749              		.val	12
 750              		.scl	8
 751              		.type	016
 752              		.endef
 753              		.def	_iManufacturer
 754              		.val	14
 755              		.scl	8
 756              		.type	014
 757              		.endef
 758              		.def	_iProduct
 759              		.val	15
 760              		.scl	8
 761              		.type	014
 762              		.endef
 763              		.def	_iSerialNumber
 764              		.val	16
 765              		.scl	8
 766              		.type	014
 767              		.endef
 768              		.def	_bNumConfigurations
 769              		.val	17
 770              		.scl	8
 771              		.type	014
 772              		.endef
 773              		.def	.eos
 774              		.val	18
 775              		.scl	102
 776              		.tag	_device_descriptor
 777              		.size	18
 778              		.endef
 779              		.def	_configuration_descriptor
 780              		.scl	10
 781              		.type	010
 782              		.size	9
 783              		.endef
 784              		.def	_bLength
 785              		.val	0
 786              		.scl	8
 787              		.type	014
 788              		.endef
 789              		.def	_bDescriptorType
 790              		.val	1
 791              		.scl	8
 792              		.type	014
 793              		.endef
 794              		.def	_wTotalLength
 795              		.val	2
 796              		.scl	8
 797              		.type	016
 798              		.endef
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 15


 799              		.def	_bNumInterfaces
 800              		.val	4
 801              		.scl	8
 802              		.type	014
 803              		.endef
 804              		.def	_bConfigurationValue
 805              		.val	5
 806              		.scl	8
 807              		.type	014
 808              		.endef
 809              		.def	_iConfiguration
 810              		.val	6
 811              		.scl	8
 812              		.type	014
 813              		.endef
 814              		.def	_bmAttributes
 815              		.val	7
 816              		.scl	8
 817              		.type	014
 818              		.endef
 819              		.def	_bMaxPower
 820              		.val	8
 821              		.scl	8
 822              		.type	014
 823              		.endef
 824              		.def	.eos
 825              		.val	9
 826              		.scl	102
 827              		.tag	_configuration_descriptor
 828              		.size	9
 829              		.endef
 830              		.def	_interface_descriptor
 831              		.scl	10
 832              		.type	010
 833              		.size	9
 834              		.endef
 835              		.def	_bLength
 836              		.val	0
 837              		.scl	8
 838              		.type	014
 839              		.endef
 840              		.def	_bDescriptorType
 841              		.val	1
 842              		.scl	8
 843              		.type	014
 844              		.endef
 845              		.def	_bInterfaceNumber
 846              		.val	2
 847              		.scl	8
 848              		.type	014
 849              		.endef
 850              		.def	_bAlternateSetting
 851              		.val	3
 852              		.scl	8
 853              		.type	014
 854              		.endef
 855              		.def	_bNumEndpoints
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 16


 856              		.val	4
 857              		.scl	8
 858              		.type	014
 859              		.endef
 860              		.def	_bInterfaceClass
 861              		.val	5
 862              		.scl	8
 863              		.type	014
 864              		.endef
 865              		.def	_bInterfaceSubclass
 866              		.val	6
 867              		.scl	8
 868              		.type	014
 869              		.endef
 870              		.def	_bInterfaceProtocol
 871              		.val	7
 872              		.scl	8
 873              		.type	014
 874              		.endef
 875              		.def	_iInterface
 876              		.val	8
 877              		.scl	8
 878              		.type	014
 879              		.endef
 880              		.def	.eos
 881              		.val	9
 882              		.scl	102
 883              		.tag	_interface_descriptor
 884              		.size	9
 885              		.endef
 886              		.def	_endpoint_descriptor
 887              		.scl	10
 888              		.type	010
 889              		.size	7
 890              		.endef
 891              		.def	_bLength
 892              		.val	0
 893              		.scl	8
 894              		.type	014
 895              		.endef
 896              		.def	_bDescriptorType
 897              		.val	1
 898              		.scl	8
 899              		.type	014
 900              		.endef
 901              		.def	_bEndpointAddress
 902              		.val	2
 903              		.scl	8
 904              		.type	014
 905              		.endef
 906              		.def	_bmAttributes
 907              		.val	3
 908              		.scl	8
 909              		.type	014
 910              		.endef
 911              		.def	_wMaxPacketSize
 912              		.val	4
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 17


 913              		.scl	8
 914              		.type	016
 915              		.endef
 916              		.def	_bInterval
 917              		.val	6
 918              		.scl	8
 919              		.type	014
 920              		.endef
 921              		.def	.eos
 922              		.val	7
 923              		.scl	102
 924              		.tag	_endpoint_descriptor
 925              		.size	7
 926              		.endef
 927              		.def	_string_descriptor
 928              		.scl	10
 929              		.type	010
 930              		.size	2
 931              		.endef
 932              		.def	_bLength
 933              		.val	0
 934              		.scl	8
 935              		.type	014
 936              		.endef
 937              		.def	_bDescriptorType
 938              		.val	1
 939              		.scl	8
 940              		.type	014
 941              		.endef
 942              		.def	.eos
 943              		.val	2
 944              		.scl	102
 945              		.tag	_string_descriptor
 946              		.size	2
 947              		.endef
 948              		.def	_interface_association_descriptor
 949              		.scl	10
 950              		.type	010
 951              		.size	8
 952              		.endef
 953              		.def	_bLength
 954              		.val	0
 955              		.scl	8
 956              		.type	014
 957              		.endef
 958              		.def	_bDescriptorType
 959              		.val	1
 960              		.scl	8
 961              		.type	014
 962              		.endef
 963              		.def	_bFirstInterface
 964              		.val	2
 965              		.scl	8
 966              		.type	014
 967              		.endef
 968              		.def	_bInterfaceCount
 969              		.val	3
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 18


 970              		.scl	8
 971              		.type	014
 972              		.endef
 973              		.def	_bFunctionClass
 974              		.val	4
 975              		.scl	8
 976              		.type	014
 977              		.endef
 978              		.def	_bFunctionSubClass
 979              		.val	5
 980              		.scl	8
 981              		.type	014
 982              		.endef
 983              		.def	_bFunctionProtocol
 984              		.val	6
 985              		.scl	8
 986              		.type	014
 987              		.endef
 988              		.def	_iFunction
 989              		.val	7
 990              		.scl	8
 991              		.type	014
 992              		.endef
 993              		.def	.eos
 994              		.val	8
 995              		.scl	102
 996              		.tag	_interface_association_descriptor
 997              		.size	8
 998              		.endef
 999              		.def	_configuration_1_packet
 1000              		.scl	10
 1001              		.type	010
 1002              		.size	32
 1003              		.endef
 1004              		.def	_config
 1005              		.val	0
 1006              		.scl	8
 1007              		.tag	_configuration_descriptor
 1008              		.size	9
 1009              		.type	010
 1010              		.endef
 1011              		.def	_interface
 1012              		.val	9
 1013              		.scl	8
 1014              		.tag	_interface_descriptor
 1015              		.size	9
 1016              		.type	010
 1017              		.endef
 1018              		.def	_ep
 1019              		.val	18
 1020              		.scl	8
 1021              		.tag	_endpoint_descriptor
 1022              		.size	7
 1023              		.type	010
 1024              		.endef
 1025              		.def	_ep1_out
 1026              		.val	25
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 19


 1027              		.scl	8
 1028              		.tag	_endpoint_descriptor
 1029              		.size	7
 1030              		.type	010
 1031              		.endef
 1032              		.def	.eos
 1033              		.val	32
 1034              		.scl	102
 1035              		.tag	_configuration_1_packet
 1036              		.size	32
 1037              		.endef
 1038              		.def	_.6fake
 1039              		.scl	10
 1040              		.type	010
 1041              		.size	4
 1042              		.endef
 1043              		.def	_bLength
 1044              		.val	0
 1045              		.scl	8
 1046              		.type	014
 1047              		.endef
 1048              		.def	_bDescriptorType
 1049              		.val	1
 1050              		.scl	8
 1051              		.type	014
 1052              		.endef
 1053              		.def	_lang
 1054              		.val	2
 1055              		.scl	8
 1056              		.type	016
 1057              		.endef
 1058              		.def	.eos
 1059              		.val	4
 1060              		.scl	102
 1061              		.tag	_.6fake
 1062              		.size	4
 1063              		.endef
 1064              		.def	_.7fake
 1065              		.scl	10
 1066              		.type	010
 1067              		.size	48
 1068              		.endef
 1069              		.def	_bLength
 1070              		.val	0
 1071              		.scl	8
 1072              		.type	014
 1073              		.endef
 1074              		.def	_bDescriptorType
 1075              		.val	1
 1076              		.scl	8
 1077              		.type	014
 1078              		.endef
 1079              		.def	_chars
 1080              		.val	2
 1081              		.scl	8
 1082              		.dim	23
 1083              		.size	46
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 20


 1084              		.type	076
 1085              		.endef
 1086              		.def	.eos
 1087              		.val	48
 1088              		.scl	102
 1089              		.tag	_.7fake
 1090              		.size	48
 1091              		.endef
 1092              		.def	_.8fake
 1093              		.scl	10
 1094              		.type	010
 1095              		.size	30
 1096              		.endef
 1097              		.def	_bLength
 1098              		.val	0
 1099              		.scl	8
 1100              		.type	014
 1101              		.endef
 1102              		.def	_bDescriptorType
 1103              		.val	1
 1104              		.scl	8
 1105              		.type	014
 1106              		.endef
 1107              		.def	_chars
 1108              		.val	2
 1109              		.scl	8
 1110              		.dim	14
 1111              		.size	28
 1112              		.type	076
 1113              		.endef
 1114              		.def	.eos
 1115              		.val	30
 1116              		.scl	102
 1117              		.tag	_.8fake
 1118              		.size	30
 1119              		.endef
 1120              		.def	_STATIC_SIZE_CHECK_LINE_227
 1121              		.scl	13
 1122              		.dim	1
 1123              		.size	1
 1124              		.type	062
 1125              		.endef
 1126              		.def	_STATIC_SIZE_CHECK_LINE_228
 1127              		.scl	13
 1128              		.dim	1
 1129              		.size	1
 1130              		.type	062
 1131              		.endef
 1132              		.section	.text,code
 1133              		.align	2
 1134              		.def	_usb_application_get_string
 1135              		.val	_usb_application_get_string
 1136              		.scl	2
 1137              		.type	044
 1138              		.endef
 1139              		.global	_usb_application_get_string	; export
 1140              	_usb_application_get_string:
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 21


 1141              		.def	.bf
 1142              		.val	.
 1143              		.scl	101
   1:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /*
   2:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * USB Descriptors file
   3:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
   4:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * This file may be used by anyone for any purpose and may be used as a
   5:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * starting point making your own application using M-Stack.
   6:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
   7:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * It is worth noting that M-Stack itself is not under the same license as
   8:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * this file.
   9:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  10:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * M-Stack is distributed in the hope that it will be useful, but WITHOUT
  11:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  12:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * FITNESS FOR A PARTICULAR PURPOSE.  For details, see sections 7, 8, and 9
  13:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * of the Apache License, version 2.0 which apply to this file.  If you have
  14:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * purchased a commercial license for this software from Signal 11 Software,
  15:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * your commerical license superceeds the information in this header.
  16:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  17:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * Alan Ott
  18:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * Signal 11 Software
  19:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
  20:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  21:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #include "usb_config.h"
  22:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #include "usb.h"
  23:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #include "usb_ch9.h"
  24:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  25:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #ifdef __C18
  26:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #define ROMPTR rom
  27:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #else
  28:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #define ROMPTR
  29:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** #endif
  30:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  31:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* Configuration Packet
  32:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  33:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * This packet contains a configuration descriptor, one or more interface
  34:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * descriptors, class descriptors(optional), and endpoint descriptors for a
  35:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * single configuration of the device.  This struct is specific to the
  36:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * device, so the application will need to add any interfaces, classes and
  37:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * endpoints it intends to use.  It is sent to the host in response to a
  38:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * GET_DESCRIPTOR[CONFIGURATION] request.
  39:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  40:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * While Most devices will only have one configuration, a device can have as
  41:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * many configurations as it needs.  To have more than one, simply make as
  42:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * many of these structs as are required, one for each configuration.
  43:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  44:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * An instance of each configuration packet must be put in the
  45:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * usb_application_config_descs[] array below (which is #defined in
  46:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * usb_config.h) so that the USB stack can find it.
  47:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  48:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * See Chapter 9 of the USB specification from usb.org for details.
  49:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  50:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * It's worth noting that adding endpoints here does not automatically
  51:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * enable them in the USB stack.  To use an endpoint, it must be declared
  52:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * here and also in usb_config.h.
  53:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  54:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * The configuration packet below is for the demo application.  Yours will
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 22


  55:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * of course vary.
  56:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
  57:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** struct configuration_1_packet {
  58:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	struct configuration_descriptor  config;
  59:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	struct interface_descriptor      interface;
  60:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	struct endpoint_descriptor       ep;
  61:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	struct endpoint_descriptor       ep1_out;
  62:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
  63:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  64:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  65:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* Device Descriptor
  66:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  67:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * Each device has a single device descriptor describing the device.  The
  68:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * format is described in Chapter 9 of the USB specification from usb.org.
  69:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * USB_DEVICE_DESCRIPTOR needs to be defined to the name of this object in
  70:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * usb_config.h.  For more information, see USB_DEVICE_DESCRIPTOR in usb.h.
  71:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
  72:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** const ROMPTR struct device_descriptor this_device_descriptor =
  73:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** {
  74:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(struct device_descriptor), // bLength
  75:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_DEVICE, // bDescriptorType
  76:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0200, // 0x0200 = USB 2.0, 0x0110 = USB 1.1
  77:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x00, // Device class
  78:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x00, // Device Subclass
  79:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x00, // Protocol.
  80:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	EP_0_LEN, // bMaxPacketSize0
  81:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0xA0A0, // Vendor
  82:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0002, // Product
  83:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	//0x0c12, 0x0005, // Vendor,Product for zeroplus joystick
  84:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0001, // device release (1.0)
  85:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	1, // Manufacturer
  86:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	2, // Product
  87:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0, // Serial
  88:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	NUMBER_OF_CONFIGURATIONS // NumConfigurations
  89:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
  90:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
  91:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* Configuration Packet Instance
  92:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
  93:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * This is an instance of the configuration_packet struct containing all the
  94:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * data describing a single configuration of this device.  It is wise to use
  95:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * as much C here as possible, such as sizeof() operators, and #defines from
  96:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * usb_config.h.  When stuff is wrong here, it can be difficult to track
  97:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * down exactly why, so it's good to get the compiler to do as much of it
  98:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * for you as it can.
  99:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
 100:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** static const ROMPTR struct configuration_1_packet configuration_1 =
 101:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** {
 102:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{
 103:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	// Members from struct configuration_descriptor
 104:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(struct configuration_descriptor),
 105:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_CONFIGURATION,
 106:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(configuration_1), //wTotalLength (length of the whole packet)
 107:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	1, // bNumInterfaces
 108:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	1, // bConfigurationValue
 109:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	2, // iConfiguration (index of string descriptor)
 110:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0b10000000,
 111:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	100/2,   // 100/2 indicates 100mA
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 23


 112:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	},
 113:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 114:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{
 115:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	// Members from struct interface_descriptor
 116:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(struct interface_descriptor), // bLength;
 117:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_INTERFACE,
 118:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0, // InterfaceNumber
 119:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0, // AlternateSetting
 120:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x2, // bNumEndpoints (num besides endpoint 0)
 121:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0xff, // bInterfaceClass 3=HID, 0xFF=VendorDefined
 122:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x00, // bInterfaceSubclass (0=NoBootInterface for HID)
 123:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x00, // bInterfaceProtocol
 124:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x02, // iInterface (index of string describing interface)
 125:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	},
 126:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 127:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{
 128:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	// Members of the Endpoint Descriptor (EP1 IN)
 129:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(struct endpoint_descriptor),
 130:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_ENDPOINT,
 131:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x01 | 0x80, // endpoint #1 0x80=IN
 132:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	EP_BULK, // bmAttributes
 133:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	64, // wMaxPacketSize
 134:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	1,   // bInterval in ms.
 135:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	},
 136:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 137:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{
 138:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	// Members of the Endpoint Descriptor (EP1 OUT)
 139:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(struct endpoint_descriptor),
 140:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_ENDPOINT,
 141:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x01 /*| 0x00*/, // endpoint #1 0x00=IN
 142:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	EP_BULK, // bmAttributes
 143:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	64, // wMaxPacketSize
 144:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	1,   // bInterval in ms.
 145:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	},
 146:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
 147:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 148:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* String Descriptors
 149:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
 150:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * String descriptors are optional. If strings are used, string #0 is
 151:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * required, and must contain the language ID of the other strings.  See
 152:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * Chapter 9 of the USB specification from usb.org for more info.
 153:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
 154:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * Strings are UTF-16 Unicode, and are not NULL-terminated, hence the
 155:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * unusual syntax.
 156:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
 157:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 158:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* String index 0, only has one character in it, which is to be set to the
 159:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****    language ID of the language which the other strings are in. */
 160:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** static const ROMPTR struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t lang; } str00 = {
 161:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(str00),
 162:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_STRING,
 163:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	0x0409 // US English
 164:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
 165:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 166:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** static const ROMPTR struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[23]; } vendor_s
 167:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(vendor_string),
 168:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_STRING,
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 24


 169:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{'S','i','g','n','a','l',' ','1','1',' ','S','o','f','t','w','a','r','e',' ','L','L','C','.'}
 170:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
 171:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 172:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** static const ROMPTR struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[14]; } product_
 173:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	sizeof(product_string),
 174:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	DESC_STRING,
 175:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	{'U','S','B',' ','B','o','o','t','l','o','a','d','e','r'}
 176:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** };
 177:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 178:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 179:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** /* Get String function
 180:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  *
 181:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * This function is called by the USB stack to get a pointer to a string
 182:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * descriptor.  If using strings, USB_STRING_DESCRIPTOR_FUNC must be defined
 183:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * to the name of this function in usb_config.h.  See
 184:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * USB_STRING_DESCRIPTOR_FUNC in usb.h for information about this function.
 185:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * This is a function, and not simply a list or map, because it is useful,
 186:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * and advisable, to have a serial number string which may be read from
 187:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  * EEPROM or somewhere that's not part of static program memory.
 188:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c ****  */
 189:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** int16_t usb_application_get_string(uint8_t string_number, const void **ptr)
 190:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** {
 1144              		.line	190
 1145              		.endef
 1146              		.def	_string_number
 1147              		.val	4
 1148              		.scl	17
 1149              		.type	014
 1150              		.endef
 1151              		.def	_ptr
 1152              		.val	1
 1153              		.scl	17
 1154              		.type	0121
 1155              		.endef
 1156              		.def	.bb
 1157              		.val	.
 1158              		.scl	100
 1159              		.line	190
 1160              		.endef
 1161              		.set ___PA___,1
 1162 000000  00 42 78 		mov.b	w0,w4
 1163              		.def	___FP
 1164              		.val	15
 1165              		.scl	4
 1166              		.type	4
 1167              		.endef
 191:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	if (string_number == 0) {
 1168              		.ln	191
 1169 000002  E0 4F 52 		sub.b	w4,#0,[w15]
 1170              		.set ___BP___,33
 1171 000004  00 00 3A 		bra	nz,.L2
 192:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		*ptr = &str00;
 1172              		.ln	192
 1173 000006  04 00 20 		mov	#_str00,w4
 1174 000008  84 08 78 		mov	w4,[w1]
 193:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		return sizeof(str00);
 1175              		.ln	193
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 25


 1176 00000a  40 00 05 		retlw	#4,w0
 1177              	.L2:
 194:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	}
 195:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	else if (string_number == 1) {
 1178              		.ln	195
 1179 00000c  E1 4F 52 		sub.b	w4,#1,[w15]
 1180              		.set ___BP___,5
 1181 00000e  00 00 3A 		bra	nz,.L4
 196:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		*ptr = &vendor_string;
 1182              		.ln	196
 1183 000010  04 00 20 		mov	#_vendor_string,w4
 1184 000012  84 08 78 		mov	w4,[w1]
 197:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		return sizeof(vendor_string);
 1185              		.ln	197
 1186 000014  00 03 05 		retlw	#48,w0
 1187              	.L4:
 198:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	}
 199:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	else if (string_number == 2) {
 200:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		*ptr = &product_string;
 201:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		return sizeof(product_string);
 202:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	}
 203:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	else if (string_number == 3) {
 204:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		/* This is where you might have code to do something like read
 205:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		   a serial number out of EEPROM and return it. */
 206:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 		return -1;
 1188              		.ln	206
 1189 000016  00 80 EB 		setm	w0
 1190              		.ln	199
 1191 000018  E2 4F 52 		sub.b	w4,#2,[w15]
 1192              		.set ___BP___,55
 1193 00001a  00 00 3A 		bra	nz,.L3
 1194              		.ln	200
 1195 00001c  04 00 20 		mov	#_product_string,w4
 1196 00001e  84 08 78 		mov	w4,[w1]
 1197              		.ln	201
 1198 000020  E0 01 20 		mov	#30,w0
 1199              	.L3:
 207:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	}
 208:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 
 209:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** 	return -1;
 210:/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c **** }
 1200              		.ln	210
 1201 000022  00 00 06 		return	
 1202              		.def	.eb
 1203              		.val	.
 1204              		.scl	100
 1205              		.line	210
 1206              		.endef
 1207              		.def	.ef
 1208              		.val	.
 1209              		.scl	101
 1210              		.line	210
 1211              		.endef
 1212              		.def	_usb_application_get_string
 1213              		.val	.
 1214              		.scl	-1
 1215              		.endef
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 26


 1216              		.global	_this_device_descriptor	; export
 1217              		.section	.const,psv,page
 1218                 		.align	2
 1219                 	_this_device_descriptor:
 1220 0000 12          		.byte 18
 1221 0001 01          		.byte 1
 1222 0002 00 02       		.word	512
 1223 0004 00          		.byte 0
 1224 0005 00          		.byte 0
 1225 0006 00          		.byte 0
 1226 0007 08          		.byte 8
 1227 0008 A0 A0       		.word	-24416
 1228 000a 02 00       		.word	2
 1229 000c 01 00       		.word	1
 1230 000e 01          		.byte 1
 1231 000f 02          		.byte 2
 1232 0010 00          		.byte 0
 1233 0011 01          		.byte 1
 1234                 		.global	_usb_application_config_descs	; export
 1235                 		.section	.ndata,data,near
 1236                 		.align	2
 1237                 	_usb_application_config_descs:
 1238 0000 00 00       		.word	_configuration_1
 1239                 		.section	.const,psv,page
 1240                 		.align	2
 1241                 	_str00:
 1242 0012 04          		.byte 4
 1243 0013 03          		.byte 3
 1244 0014 09 04       		.word	1033
 1245                 		.align	2
 1246                 	_vendor_string:
 1247 0016 30          		.byte 48
 1248 0017 03          		.byte 3
 1249 0018 53 00       		.word	83
 1250 001a 69 00       		.word	105
 1251 001c 67 00       		.word	103
 1252 001e 6E 00       		.word	110
 1253 0020 61 00       		.word	97
 1254 0022 6C 00       		.word	108
 1255 0024 20 00       		.word	32
 1256 0026 31 00       		.word	49
 1257 0028 31 00       		.word	49
 1258 002a 20 00       		.word	32
 1259 002c 53 00       		.word	83
 1260 002e 6F 00       		.word	111
 1261 0030 66 00       		.word	102
 1262 0032 74 00       		.word	116
 1263 0034 77 00       		.word	119
 1264 0036 61 00       		.word	97
 1265 0038 72 00       		.word	114
 1266 003a 65 00       		.word	101
 1267 003c 20 00       		.word	32
 1268 003e 4C 00       		.word	76
 1269 0040 4C 00       		.word	76
 1270 0042 43 00       		.word	67
 1271 0044 2E 00       		.word	46
 1272                 		.align	2
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 27


 1273                 	_product_string:
 1274 0046 1E          		.byte 30
 1275 0047 03          		.byte 3
 1276 0048 55 00       		.word	85
 1277 004a 53 00       		.word	83
 1278 004c 42 00       		.word	66
 1279 004e 20 00       		.word	32
 1280 0050 42 00       		.word	66
 1281 0052 6F 00       		.word	111
 1282 0054 6F 00       		.word	111
 1283 0056 74 00       		.word	116
 1284 0058 6C 00       		.word	108
 1285 005a 6F 00       		.word	111
 1286 005c 61 00       		.word	97
 1287 005e 64 00       		.word	100
 1288 0060 65 00       		.word	101
 1289 0062 72 00       		.word	114
 1290                 		.align	2
 1291                 	_configuration_1:
 1292 0064 09          		.byte 9
 1293 0065 02          		.byte 2
 1294 0066 20 00       		.word	32
 1295 0068 01          		.byte 1
 1296 0069 01          		.byte 1
 1297 006a 02          		.byte 2
 1298 006b 80          		.byte -128
 1299 006c 32          		.byte 50
 1300 006d 09          		.byte 9
 1301 006e 04          		.byte 4
 1302 006f 00          		.byte 0
 1303 0070 00          		.byte 0
 1304 0071 02          		.byte 2
 1305 0072 FF          		.byte -1
 1306 0073 00          		.byte 0
 1307 0074 00          		.byte 0
 1308 0075 02          		.byte 2
 1309 0076 07          		.byte 7
 1310 0077 05          		.byte 5
 1311 0078 81          		.byte -127
 1312 0079 02          		.byte 2
 1313 007a 40 00       		.word	64
 1314 007c 01          		.byte 1
 1315 007d 07          		.byte 7
 1316 007e 05          		.byte 5
 1317 007f 01          		.byte 1
 1318 0080 02          		.byte 2
 1319 0081 40 00       		.word	64
 1320 0083 01          		.byte 1
 1321                 		.section	.text,code
 1322              		.def	_configuration_1
 1323              		.val	_configuration_1
 1324              		.scl	3
 1325              		.tag	_configuration_1_packet
 1326              		.size	32
 1327              		.type	010
 1328              		.endef
 1329              		.def	_str00
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 28


 1330              		.val	_str00
 1331              		.scl	3
 1332              		.tag	_.6fake
 1333              		.size	4
 1334              		.type	010
 1335              		.endef
 1336              		.def	_vendor_string
 1337              		.val	_vendor_string
 1338              		.scl	3
 1339              		.tag	_.7fake
 1340              		.size	48
 1341              		.type	010
 1342              		.endef
 1343              		.def	_product_string
 1344              		.val	_product_string
 1345              		.scl	3
 1346              		.tag	_.8fake
 1347              		.size	30
 1348              		.type	010
 1349              		.endef
 1350              		.def	_this_device_descriptor
 1351              		.val	_this_device_descriptor
 1352              		.scl	2
 1353              		.tag	_device_descriptor
 1354              		.size	18
 1355              		.type	010
 1356              		.endef
 1357              		.def	_usb_application_config_descs
 1358              		.val	_usb_application_config_descs
 1359              		.scl	2
 1360              		.tag	_configuration_descriptor
 1361              		.dim	1
 1362              		.size	2
 1363              		.type	0170
 1364              		.endef
 1365              	
 1366              		.section __c30_signature, info, data
 1367 0000 01 00       		.word 0x0001
 1368 0002 00 00       		.word 0x0000
 1369 0004 00 00       		.word 0x0000
 1370                 	
 1371                 	; MCHP configuration words
 1372                 	
 1373                 		.set ___PA___,0
 1374                 		.end
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 /opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h
                            *ABS*:00000000 /home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb_ch9.h
                            *ABS*:00000000 /home/phil/Projects/phoenix/firmware/bootloader/usb_config.h
                            *ABS*:00000000 /opt/microchip/xc16/v1.23/bin/bin/../../include/stddef.h
                            *ABS*:00000000 /opt/microchip/xc16/v1.23/bin/bin/../../include/stdlib.h
                            *ABS*:00000000 /opt/microchip/xc16/v1.23/bin/bin/../../include/stdbool.h
                            *ABS*:00000000 /opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h
                            *ABS*:00000000 /home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb.h
                            *ABS*:00000000 /home/phil/Projects/phoenix/firmware/bootloader/usb_config.h
                            *ABS*:00000000 /home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c
                            *ABS*:00000001 __C30COFF
                            *ABS*:00000000 _int8_t
                            *ABS*:00000000 _int16_t
                            *ABS*:00000000 _int32_t
                            *ABS*:00000000 _int64_t
                            *ABS*:00000000 _uint8_t
                            *ABS*:00000000 _uint16_t
                            *ABS*:00000000 _uint32_t
                            *ABS*:00000000 _uint64_t
                            *ABS*:00000000 _int_least8_t
                            *ABS*:00000000 _int_least16_t
                            *ABS*:00000000 _int_least24_t
                            *ABS*:00000000 _int_least32_t
                            *ABS*:00000000 _int_least64_t
                            *ABS*:00000000 _uint_least8_t
                            *ABS*:00000000 _uint_least16_t
                            *ABS*:00000000 _uint_least24_t
                            *ABS*:00000000 _uint_least32_t
                            *ABS*:00000000 _uint_least64_t
                            *ABS*:00000000 _int_fast8_t
                            *ABS*:00000000 _int_fast16_t
                            *ABS*:00000000 _int_fast24_t
                            *ABS*:00000000 _int_fast32_t
                            *ABS*:00000000 _int_fast64_t
                            *ABS*:00000000 _uint_fast8_t
                            *ABS*:00000000 _uint_fast16_t
                            *ABS*:00000000 _uint_fast24_t
                            *ABS*:00000000 _uint_fast32_t
                            *ABS*:00000000 _uint_fast64_t
                            *ABS*:00000000 _intmax_t
                            *ABS*:00000000 _uintmax_t
                            *ABS*:00000000 _ptrdiff_t
                            *ABS*:00000000 _size_t
                            *ABS*:00000000 _wchar_t
                            *ABS*:00000000 _.0fake
                            *ABS*:00000000 _quot
                            *ABS*:00000002 _rem
                            *ABS*:00000004 .eos
                            *ABS*:00000000 _div_t
                            *ABS*:00000000 _.1fake
                            *ABS*:00000000 _quot
                            *ABS*:00000002 _rem
                            *ABS*:00000004 .eos
                            *ABS*:00000000 _udiv_t
                            *ABS*:00000000 _.2fake
                            *ABS*:00000000 _quot
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 30


                            *ABS*:00000004 _rem
                            *ABS*:00000008 .eos
                            *ABS*:00000000 _ldiv_t
                            *ABS*:00000000 _.3fake
                            *ABS*:00000000 _quot
                            *ABS*:00000004 _rem
                            *ABS*:00000008 .eos
                            *ABS*:00000000 _uldiv_t
                            *ABS*:00000000 _usb_ep0_data_stage_callback
                            *ABS*:00000000 _PID
                            *ABS*:00000001 _PID_OUT
                            *ABS*:00000009 _PID_IN
                            *ABS*:00000005 _PID_SOF
                            *ABS*:0000000d _PID_SETUP
                            *ABS*:00000003 _PID_DATA0
                            *ABS*:0000000b _PID_DATA1
                            *ABS*:00000007 _PID_DATA2
                            *ABS*:0000000f _PID_MDATA
                            *ABS*:00000002 _PID_ACK
                            *ABS*:0000000a _PID_NAK
                            *ABS*:0000000e _PID_STALL
                            *ABS*:00000006 _PID_NYET
                            *ABS*:0000000c _PID_PRE
                            *ABS*:0000000c _PID_ERR
                            *ABS*:00000008 _PID_SPLIT
                            *ABS*:00000004 _PID_PING
                            *ABS*:00000000 _PID_RESERVED
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _DestinationType
                            *ABS*:00000000 _DEST_DEVICE
                            *ABS*:00000001 _DEST_INTERFACE
                            *ABS*:00000002 _DEST_ENDPOINT
                            *ABS*:00000003 _DEST_OTHER_ELEMENT
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _RequestType
                            *ABS*:00000000 _REQUEST_TYPE_STANDARD
                            *ABS*:00000001 _REQUEST_TYPE_CLASS
                            *ABS*:00000002 _REQUEST_TYPE_VENDOR
                            *ABS*:00000003 _REQUEST_TYPE_RESERVED
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _StandardControlRequest
                            *ABS*:00000000 _GET_STATUS
                            *ABS*:00000001 _CLEAR_FEATURE
                            *ABS*:00000003 _SET_FEATURE
                            *ABS*:00000005 _SET_ADDRESS
                            *ABS*:00000006 _GET_DESCRIPTOR
                            *ABS*:00000007 _SET_DESCRIPTOR
                            *ABS*:00000008 _GET_CONFIGURATION
                            *ABS*:00000009 _SET_CONFIGURATION
                            *ABS*:0000000a _GET_INTERFACE
                            *ABS*:0000000b _SET_INTERFACE
                            *ABS*:0000000c _SYNCH_FRAME
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _DescriptorTypes
                            *ABS*:00000001 _DESC_DEVICE
                            *ABS*:00000002 _DESC_CONFIGURATION
                            *ABS*:00000003 _DESC_STRING
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 31


                            *ABS*:00000004 _DESC_INTERFACE
                            *ABS*:00000005 _DESC_ENDPOINT
                            *ABS*:00000006 _DESC_DEVICE_QUALIFIER
                            *ABS*:00000007 _DESC_OTHER_SPEED_CONFIGURATION
                            *ABS*:00000008 _DESC_INTERFACE_POWER
                            *ABS*:00000009 _DESC_OTG
                            *ABS*:0000000a _DESC_DEBUG
                            *ABS*:0000000b _DESC_INTERFACE_ASSOCIATION
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _DeviceClassCodes
                            *ABS*:00000000 _DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL
                            *ABS*:000000ef _DEVICE_CLASS_MISC
                            *ABS*:000000fe _DEVICE_CLASS_APPLICATION_SPECIFIC
                            *ABS*:000000ff _DEVICE_CLASS_VENDOR_SPECIFIC
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _EndpointAttributes
                            *ABS*:00000000 _EP_CONTROL
                            *ABS*:00000001 _EP_ISOCHRONOUS
                            *ABS*:00000002 _EP_BULK
                            *ABS*:00000003 _EP_INTERRUPT
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _.4fake
                            *ABS*:00000000 _destination
                            *ABS*:00000005 _type
                            *ABS*:00000007 _direction
                            *ABS*:00000001 .eos
                            *ABS*:00000000 _.5fake
                            *ABS*:00000000 _.4fake
                            *ABS*:00000000 _bmRequestType
                            *ABS*:00000001 .eos
                            *ABS*:00000000 _setup_packet
                            *ABS*:00000000 _REQUEST
                            *ABS*:00000001 _bRequest
                            *ABS*:00000002 _wValue
                            *ABS*:00000004 _wIndex
                            *ABS*:00000006 _wLength
                            *ABS*:00000008 .eos
                            *ABS*:00000000 _device_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _bcdUSB
                            *ABS*:00000004 _bDeviceClass
                            *ABS*:00000005 _bDeviceSubclass
                            *ABS*:00000006 _bDeviceProtocol
                            *ABS*:00000007 _bMaxPacketSize0
                            *ABS*:00000008 _idVendor
                            *ABS*:0000000a _idProduct
                            *ABS*:0000000c _bcdDevice
                            *ABS*:0000000e _iManufacturer
                            *ABS*:0000000f _iProduct
                            *ABS*:00000010 _iSerialNumber
                            *ABS*:00000011 _bNumConfigurations
                            *ABS*:00000012 .eos
                            *ABS*:00000000 _configuration_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _wTotalLength
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 32


                            *ABS*:00000004 _bNumInterfaces
                            *ABS*:00000005 _bConfigurationValue
                            *ABS*:00000006 _iConfiguration
                            *ABS*:00000007 _bmAttributes
                            *ABS*:00000008 _bMaxPower
                            *ABS*:00000009 .eos
                            *ABS*:00000000 _interface_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _bInterfaceNumber
                            *ABS*:00000003 _bAlternateSetting
                            *ABS*:00000004 _bNumEndpoints
                            *ABS*:00000005 _bInterfaceClass
                            *ABS*:00000006 _bInterfaceSubclass
                            *ABS*:00000007 _bInterfaceProtocol
                            *ABS*:00000008 _iInterface
                            *ABS*:00000009 .eos
                            *ABS*:00000000 _endpoint_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _bEndpointAddress
                            *ABS*:00000003 _bmAttributes
                            *ABS*:00000004 _wMaxPacketSize
                            *ABS*:00000006 _bInterval
                            *ABS*:00000007 .eos
                            *ABS*:00000000 _string_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 .eos
                            *ABS*:00000000 _interface_association_descriptor
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _bFirstInterface
                            *ABS*:00000003 _bInterfaceCount
                            *ABS*:00000004 _bFunctionClass
                            *ABS*:00000005 _bFunctionSubClass
                            *ABS*:00000006 _bFunctionProtocol
                            *ABS*:00000007 _iFunction
                            *ABS*:00000008 .eos
                            *ABS*:00000000 _configuration_1_packet
                            *ABS*:00000000 _config
                            *ABS*:00000009 _interface
                            *ABS*:00000012 _ep
                            *ABS*:00000019 _ep1_out
                            *ABS*:00000020 .eos
                            *ABS*:00000000 _.6fake
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _lang
                            *ABS*:00000004 .eos
                            *ABS*:00000000 _.7fake
                            *ABS*:00000000 _bLength
                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _chars
                            *ABS*:00000030 .eos
                            *ABS*:00000000 _.8fake
                            *ABS*:00000000 _bLength
MPLAB XC16 ASSEMBLY Listing:  usb_descriptors.s 			page 33


                            *ABS*:00000001 _bDescriptorType
                            *ABS*:00000002 _chars
                            *ABS*:0000001e .eos
                            *ABS*:00000000 _STATIC_SIZE_CHECK_LINE_227
                            *ABS*:00000000 _STATIC_SIZE_CHECK_LINE_228
   usb_descriptors.s:1140   .text:00000000 _usb_application_get_string
   usb_descriptors.s:1142   .text:00000000 .bf
                            *ABS*:00000004 _string_number
                            *ABS*:00000001 _ptr
   usb_descriptors.s:1157   .text:00000000 .bb
   usb_descriptors.s:1161   *ABS*:00000000 ___PA___
   usb_descriptors.s:1162   .text:00000000 $AUTOLINE$
                            *ABS*:0000000f ___FP
   usb_descriptors.s:1170   *ABS*:00000037 ___BP___
   usb_descriptors.s:1177   .text:0000000c .L2
   usb_descriptors.s:1187   .text:00000016 .L4
   usb_descriptors.s:1199   .text:00000022 .L3
   usb_descriptors.s:1203   .text:00000024 .eb
   usb_descriptors.s:1208   .text:00000024 .ef
   usb_descriptors.s:1213   .text:00000024 _usb_application_get_string
   usb_descriptors.s:1219   .const:00000000 _this_device_descriptor
                            *ABS*:00000008 __ext_attr_.const
   usb_descriptors.s:1237   .ndata:00000000 _usb_application_config_descs
   usb_descriptors.s:1291   .const:00000064 _configuration_1
   usb_descriptors.s:1241   .const:00000012 _str00
   usb_descriptors.s:1246   .const:00000016 _vendor_string
   usb_descriptors.s:1273   .const:00000046 _product_string

NO UNDEFINED SYMBOLS

EQUATE SYMBOLS
/opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h = 0x0
/home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb_ch9.h = 0x0
/home/phil/Projects/phoenix/firmware/bootloader/usb_config.h = 0x0
/opt/microchip/xc16/v1.23/bin/bin/../../include/stddef.h = 0x0
/opt/microchip/xc16/v1.23/bin/bin/../../include/stdlib.h = 0x0
/opt/microchip/xc16/v1.23/bin/bin/../../include/stdbool.h = 0x0
/opt/microchip/xc16/v1.23/bin/bin/../../include/stdint.h = 0x0
/home/phil/Projects/phoenix/firmware/bootloader/usb/include/usb.h = 0x0
/home/phil/Projects/phoenix/firmware/bootloader/usb_config.h = 0x0
/home/phil/Projects/phoenix/firmware/bootloader/usb_descriptors.c = 0x0
                       __C30COFF = 0x1
                         _int8_t = 0x0
                        _int16_t = 0x0
                        _int32_t = 0x0
                        _int64_t = 0x0
                        _uint8_t = 0x0
                       _uint16_t = 0x0
                       _uint32_t = 0x0
                       _uint64_t = 0x0
                   _int_least8_t = 0x0
                  _int_least16_t = 0x0
                  _int_least24_t = 0x0
                  _int_least32_t = 0x0
                  _int_least64_t = 0x0
                  _uint_least8_t = 0x0
                 _uint_least16_t = 0x0
                 _uint_least24_t = 0x0
                 _uint_least32_t = 0x0
                 _uint_least64_t = 0x0
                    _int_fast8_t = 0x0
                   _int_fast16_t = 0x0
                   _int_fast24_t = 0x0
                   _int_fast32_t = 0x0
                   _int_fast64_t = 0x0
                   _uint_fast8_t = 0x0
                  _uint_fast16_t = 0x0
                  _uint_fast24_t = 0x0
                  _uint_fast32_t = 0x0
                  _uint_fast64_t = 0x0
                       _intmax_t = 0x0
                      _uintmax_t = 0x0
                      _ptrdiff_t = 0x0
                         _size_t = 0x0
                        _wchar_t = 0x0
                         _.0fake = 0x0
                           _quot = 0x0
                            _rem = 0x2
                            .eos = 0x4
                          _div_t = 0x0
                         _.1fake = 0x0
                           _quot = 0x0
                            _rem = 0x2
                            .eos = 0x4
                         _udiv_t = 0x0
                         _.2fake = 0x0
                           _quot = 0x0
                            _rem = 0x4
                            .eos = 0x8
                         _ldiv_t = 0x0
                         _.3fake = 0x0
                           _quot = 0x0
                            _rem = 0x4
                            .eos = 0x8
                        _uldiv_t = 0x0
    _usb_ep0_data_stage_callback = 0x0
                            _PID = 0x0
                        _PID_OUT = 0x1
                         _PID_IN = 0x9
                        _PID_SOF = 0x5
                      _PID_SETUP = 0xd
                      _PID_DATA0 = 0x3
                      _PID_DATA1 = 0xb
                      _PID_DATA2 = 0x7
                      _PID_MDATA = 0xf
                        _PID_ACK = 0x2
                        _PID_NAK = 0xa
                      _PID_STALL = 0xe
                       _PID_NYET = 0x6
                        _PID_PRE = 0xc
                        _PID_ERR = 0xc
                      _PID_SPLIT = 0x8
                       _PID_PING = 0x4
                   _PID_RESERVED = 0x0
                            .eos = 0x2
                _DestinationType = 0x0
                    _DEST_DEVICE = 0x0
                 _DEST_INTERFACE = 0x1
                  _DEST_ENDPOINT = 0x2
             _DEST_OTHER_ELEMENT = 0x3
                            .eos = 0x2
                    _RequestType = 0x0
          _REQUEST_TYPE_STANDARD = 0x0
             _REQUEST_TYPE_CLASS = 0x1
            _REQUEST_TYPE_VENDOR = 0x2
          _REQUEST_TYPE_RESERVED = 0x3
                            .eos = 0x2
         _StandardControlRequest = 0x0
                     _GET_STATUS = 0x0
                  _CLEAR_FEATURE = 0x1
                    _SET_FEATURE = 0x3
                    _SET_ADDRESS = 0x5
                 _GET_DESCRIPTOR = 0x6
                 _SET_DESCRIPTOR = 0x7
              _GET_CONFIGURATION = 0x8
              _SET_CONFIGURATION = 0x9
                  _GET_INTERFACE = 0xa
                  _SET_INTERFACE = 0xb
                    _SYNCH_FRAME = 0xc
                            .eos = 0x2
                _DescriptorTypes = 0x0
                    _DESC_DEVICE = 0x1
             _DESC_CONFIGURATION = 0x2
                    _DESC_STRING = 0x3
                 _DESC_INTERFACE = 0x4
                  _DESC_ENDPOINT = 0x5
          _DESC_DEVICE_QUALIFIER = 0x6
 _DESC_OTHER_SPEED_CONFIGURATION = 0x7
           _DESC_INTERFACE_POWER = 0x8
                       _DESC_OTG = 0x9
                     _DESC_DEBUG = 0xa
     _DESC_INTERFACE_ASSOCIATION = 0xb
                            .eos = 0x2
               _DeviceClassCodes = 0x0
_DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL = 0x0
              _DEVICE_CLASS_MISC = 0xef
_DEVICE_CLASS_APPLICATION_SPECIFIC = 0xfe
   _DEVICE_CLASS_VENDOR_SPECIFIC = 0xff
                            .eos = 0x2
             _EndpointAttributes = 0x0
                     _EP_CONTROL = 0x0
                 _EP_ISOCHRONOUS = 0x1
                        _EP_BULK = 0x2
                   _EP_INTERRUPT = 0x3
                            .eos = 0x2
                         _.4fake = 0x0
                    _destination = 0x0
                           _type = 0x5
                      _direction = 0x7
                            .eos = 0x1
                         _.5fake = 0x0
                         _.4fake = 0x0
                  _bmRequestType = 0x0
                            .eos = 0x1
                   _setup_packet = 0x0
                        _REQUEST = 0x0
                       _bRequest = 0x1
                         _wValue = 0x2
                         _wIndex = 0x4
                        _wLength = 0x6
                            .eos = 0x8
              _device_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                         _bcdUSB = 0x2
                   _bDeviceClass = 0x4
                _bDeviceSubclass = 0x5
                _bDeviceProtocol = 0x6
                _bMaxPacketSize0 = 0x7
                       _idVendor = 0x8
                      _idProduct = 0xa
                      _bcdDevice = 0xc
                  _iManufacturer = 0xe
                       _iProduct = 0xf
                  _iSerialNumber = 0x10
             _bNumConfigurations = 0x11
                            .eos = 0x12
       _configuration_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                   _wTotalLength = 0x2
                 _bNumInterfaces = 0x4
            _bConfigurationValue = 0x5
                 _iConfiguration = 0x6
                   _bmAttributes = 0x7
                      _bMaxPower = 0x8
                            .eos = 0x9
           _interface_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
               _bInterfaceNumber = 0x2
              _bAlternateSetting = 0x3
                  _bNumEndpoints = 0x4
                _bInterfaceClass = 0x5
             _bInterfaceSubclass = 0x6
             _bInterfaceProtocol = 0x7
                     _iInterface = 0x8
                            .eos = 0x9
            _endpoint_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
               _bEndpointAddress = 0x2
                   _bmAttributes = 0x3
                 _wMaxPacketSize = 0x4
                      _bInterval = 0x6
                            .eos = 0x7
              _string_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                            .eos = 0x2
_interface_association_descriptor = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                _bFirstInterface = 0x2
                _bInterfaceCount = 0x3
                 _bFunctionClass = 0x4
              _bFunctionSubClass = 0x5
              _bFunctionProtocol = 0x6
                      _iFunction = 0x7
                            .eos = 0x8
         _configuration_1_packet = 0x0
                         _config = 0x0
                      _interface = 0x9
                             _ep = 0x12
                        _ep1_out = 0x19
                            .eos = 0x20
                         _.6fake = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                           _lang = 0x2
                            .eos = 0x4
                         _.7fake = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                          _chars = 0x2
                            .eos = 0x30
                         _.8fake = 0x0
                        _bLength = 0x0
                _bDescriptorType = 0x1
                          _chars = 0x2
                            .eos = 0x1e
     _STATIC_SIZE_CHECK_LINE_227 = 0x0
     _STATIC_SIZE_CHECK_LINE_228 = 0x0
                  _string_number = 0x4
                            _ptr = 0x1
                        ___PA___ = 0x0
                           ___FP = 0xf
                        ___BP___ = 0x37
               __ext_attr_.const = 0x8
